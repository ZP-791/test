class DimensionError(Exception):
    pass

def create_matrix():
    print("Введите строку матрицы.\n(После того, как матрица будет готова, введите -create_matrix- для cоздания матрицы)")
    main_list = []
    try:
        while True:
            list_to_add = []
            value = input()
            if value == 'create_matrix':
                break
            value = value.split(',')
            list_to_add = [int(x) for x in value]
            main_list.append(list_to_add)
            if len(main_list) >= 1:
                if len(list_to_add) != len(main_list[0]):
                    raise DimensionError
    except ValueError:
        print('Вы ввели недопустимый символ! Повторите ввод.')
    except DimensionError:
        if len(list_to_add) != len(main_list[0]):
            print('Недопустимая размерность матрицы! Повторите ввод.')
    return np.array(main_list)

def transpose_matrix():
    matrix = list(create_matrix())
    transposed_list = []
    control_num = 0
    while control_num < len(matrix[0]):
        list_to_add = []
        for value in matrix:
            list_to_add.append(value[control_num])
        control_num += 1
        transposed_list.append(list_to_add)
    print("\nТранспонированная матрица:\n")
    return np.array(transposed_list)

print(transpose_matrix())
